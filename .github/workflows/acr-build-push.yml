name: Build and Push to ACR

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY_NAME: containerregistrykylevoigt
  REPOSITORY_NAME: kv-portfolio-app
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # Create .env file from secrets before Docker build
    - name: Create .env file
      run: |
        echo "oura_token=${{ secrets.OURA_TOKEN }}" >> .env
        echo "oura_clientid=${{ secrets.OURA_CLIENTID }}" >> .env
        echo "oura_clientsecret=${{ secrets.OURA_CLIENTSECRET }}" >> .env
        echo "AZ_KEY1_CONNECTION_STRING=${{ secrets.AZ_KEY1_CONNECTION_STRING }}" >> .env
        echo "AZ_CONTAINER_NAME=${{ secrets.AZ_CONTAINER_NAME }}" >> .env
        echo "AZ_FOLDER_PATH=${{ secrets.AZ_FOLDER_PATH }}" >> .env
        echo "SNOWFLAKE_USER=${{ secrets.SNOWFLAKE_USER }}" >> .env
        echo "SNOWFLAKE_PASSWORD=${{ secrets.SNOWFLAKE_PASSWORD }}" >> .env
        echo "SNOWFLAKE_ACCOUNT=${{ secrets.SNOWFLAKE_ACCOUNT }}" >> .env
        echo "SNOWFLAKE_WAREHOUSE=${{ secrets.SNOWFLAKE_WAREHOUSE }}" >> .env
        echo "SNOWFLAKE_DATABASE=${{ secrets.SNOWFLAKE_DATABASE }}" >> .env
        echo "SNOWFLAKE_SCHEMA=${{ secrets.SNOWFLAKE_SCHEMA }}" >> .env
        echo "AZURE_CREDENTIALS=${{ secrets.AZURE_CREDENTIALS }}" >> .env
        echo "REGISTRY_PASSWORD=${{ secrets.REGISTRY_PASSWORD }}" >> .env
        echo "REGISTRY_USERNAME=${{ secrets.REGISTRY_USERNAME }}" >> .env
        # Add any other environment variables you need
        echo ".env file created successfully"
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    # Add verification step to ensure .env exists
    - name: Verify .env file
      run: |
        if [ -f ".env" ]; then
          echo ".env file exists"
          ls -la .env
        else
          echo ".env file is missing"
          exit 1
        fi
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.REPOSITORY_NAME }}:${{ env.IMAGE_TAG }}
          ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.REPOSITORY_NAME }}:latest